const hasShadow="attachShadow"in Element.prototype&&"getRootNode"in Element.prototype,hasSelection=!(!hasShadow||!document.createElement("div").attachShadow({mode:"open"}).getSelection),hasShady=window.ShadyDOM&&window.ShadyDOM.inUse,isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream,useDocument=!hasShadow||hasShady||!hasSelection&&!isSafari,invalidPartialElements=/^(area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|script|source|style|template|track|wbr)$/;export const eventName="-shadow-selectionchange";const validNodeTypes=[Node.ELEMENT_NODE,Node.TEXT_NODE,Node.DOCUMENT_FRAGMENT_NODE];export function findCaretFocus(s,node){const pending=[],pushAll=nodeList=>{for(let i=0;i<nodeList.length;++i)nodeList[i].shadowRoot&&pending.push(nodeList[i].shadowRoot)};for(node.shadowRoot&&pending.push(node.shadowRoot),pushAll(node.childNodes);pending.length;){const root=pending.shift();for(let i=0;i<root.childNodes.length;++i)if(s.containsNode(root.childNodes[i],!0))return root;pushAll(root.querySelectorAll("*"))}return null}function findNode(s,parentNode,isLeft){const nodes=parentNode.childNodes||parentNode.children;if(!nodes)return parentNode;for(let i=0;i<nodes.length;++i){const childNode=nodes[isLeft?i:nodes.length-1-i];if((node=childNode,validNodeTypes.includes(node.nodeType))&&s.containsNode(childNode,!0)){if(s.containsNode(childNode,!1))return childNode;if(!invalidPartialElements.exec(childNode.localName||""))return findNode(s,childNode,isLeft)}}var node;return parentNode}let recentCaretRange={node:null,offset:-1};function containsNextElement(s,node,walkForward){const start=node;for(;(node=walkFromNode(node,walkForward))&&node.contains(start););return!!node&&(node instanceof Element&&s.containsNode(node,!0))}function walkFromNode(node,walkForward){if(!walkForward)return node.previousSibling||node.parentNode||null;for(;node;){if(node.nextSibling)return node.nextSibling;node=node.parentNode}return null}!function(){if(hasSelection||useDocument)return document.addEventListener("selectionchange",ev=>{document.dispatchEvent(new CustomEvent(eventName))}),()=>{};let withinInternals=!1;document.addEventListener("selectionchange",ev=>{if(withinInternals)return;withinInternals=!0;const s=window.getSelection();if("Caret"===s.type){const root=findCaretFocus(s,s.anchorNode);if(root instanceof window.ShadowRoot){const range=getRange(root);if(range){const node=range.startContainer,offset=range.startOffset;recentCaretRange={node,offset}}}}document.dispatchEvent(new CustomEvent("-shadow-selectionchange")),window.requestAnimationFrame(()=>{withinInternals=!1})})}();const cachedRange=new Map;export function getRange(root){if(useDocument){const s=document.getSelection();return s.containsNode(root,!0)?s.getRangeAt(0):null}if(hasSelection){const s=root.getSelection();return s.rangeCount?s.getRangeAt(0):null}const thisFrame=cachedRange.get(root);if(thisFrame)return thisFrame;const result=function internalGetShadowSelection(root){const s=window.getSelection();if("None"===s.type)return{range:null,type:"none"};if("Caret"!==s.type&&"Range"!==s.type)throw new TypeError("unexpected type: "+s.type);const leftNode=findNode(s,root,!0);if(leftNode===root)return{range:null,mode:"none"};const range=document.createRange();let rightNode=null,isNaturalDirection=void 0;if("Range"===s.type&&(rightNode=findNode(s,root,!1),isNaturalDirection=function getSelectionDirection(s,leftNode,rightNode){if("Range"!==s.type)return;const measure=()=>s.toString().length,initialSize=measure();let updatedSize;return s.modify("extend","forward","character"),updatedSize=measure(),updatedSize>initialSize||containsNextElement(s,rightNode,!0)?(s.modify("extend","backward","character"),!0):updatedSize<initialSize||!s.containsNode(leftNode)?(s.modify("extend","backward","character"),!1):(s.modify("extend","backward","character"),updatedSize=measure(),updatedSize>initialSize||containsNextElement(s,leftNode,!1)?(s.modify("extend","forward","character"),!1):updatedSize<initialSize||!s.containsNode(rightNode)?(s.modify("extend","forward","character"),!0):void 0)}(s,leftNode,rightNode),void 0===isNaturalDirection))return range.setStart(leftNode,0),range.setEnd(rightNode,rightNode.length),{range,mode:"all"};const initialSize=s.toString().length;let leftOffset=0,rightOffset=0;if(null===rightNode);else if(rightNode.nodeType===Node.TEXT_NODE){const rightText=rightNode.textContent,existingNextSibling=rightNode.nextSibling;for(let i=rightText.length-1;i>=0;--i){if(rightNode.splitText(i),s.toString().length!==initialSize){rightOffset=i+1;break}}for(rightNode.insertData(rightNode.length,rightText.substr(rightNode.length));rightNode.nextSibling!==existingNextSibling;)rightNode.nextSibling.remove()}if(leftNode.nodeType===Node.TEXT_NODE){leftNode!==rightNode&&(leftNode.appendData("?"),s.collapseToStart(),s.modify("extend","right","character"));const leftText=leftNode.textContent,existingNextSibling=leftNode.nextSibling;for(let i=leftNode===rightNode?rightOffset:leftText.length-1;i>=0;--i)if(leftNode.splitText(i),""===s.toString()){leftOffset=i;break}for(leftNode.insertData(leftNode.length,leftText.substr(leftNode.length));leftNode.nextSibling!==existingNextSibling;)leftNode.nextSibling.remove();leftNode!==rightNode&&leftNode.deleteData(leftNode.length-1,1),null===rightNode&&(rightNode=leftNode,rightOffset=leftOffset)}else null===rightNode&&(rightNode=leftNode);1===initialSize&&recentCaretRange&&recentCaretRange.node===leftNode&&recentCaretRange.offset>leftOffset&&isNaturalDirection&&(isNaturalDirection=!1);!0===isNaturalDirection?(s.collapse(leftNode,leftOffset),s.extend(rightNode,rightOffset)):!1===isNaturalDirection?(s.collapse(rightNode,rightOffset),s.extend(leftNode,leftOffset)):s.setPosition(leftNode,leftOffset);return range.setStart(leftNode,leftOffset),range.setEnd(rightNode,rightOffset),{range,mode:"normal"}}(root);return cachedRange.set(root,result.range),window.setTimeout(()=>{cachedRange.delete(root)},0),result.range}