/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
import{removeNodes,reparentNodes}from"../lib/dom.js";export const initTemplatePolyfill=(forced=!1)=>{if(!forced&&"content"in document.createElement("template"))return;const contentDoc=document.implementation.createHTMLDocument("template"),body=contentDoc.body,descriptor={enumerable:!0,configurable:!0},capturedCreateElement=Document.prototype.createElement;Document.prototype.createElement=function createElement(tagName,options){const el=capturedCreateElement.call(this,tagName,options);return"TEMPLATE"===el.tagName&&(template=>{const content=contentDoc.createDocumentFragment();Object.defineProperties(template,{content:Object.assign(Object.assign({},descriptor),{get:()=>content}),innerHTML:Object.assign(Object.assign({},descriptor),{set:function(text){body.innerHTML=text,removeNodes(content,content.firstChild),reparentNodes(content,body.firstChild)}})})})(el),el}};