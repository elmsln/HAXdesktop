/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
import{isPrimitive}from"../lib/parts.js";import{directive}from"../lit-html.js";const _state=new WeakMap;export const until=directive((...args)=>part=>{let state=_state.get(part);void 0===state&&(state={lastRenderedIndex:2147483647,values:[]},_state.set(part,state));const previousValues=state.values;let previousLength=previousValues.length;state.values=args;for(let i=0;i<args.length&&!(i>state.lastRenderedIndex);i++){const value=args[i];if(isPrimitive(value)||"function"!=typeof value.then){part.setValue(value),state.lastRenderedIndex=i;break}i<previousLength&&value===previousValues[i]||(state.lastRenderedIndex=2147483647,previousLength=0,Promise.resolve(value).then(resolvedValue=>{const index=state.values.indexOf(value);index>-1&&index<state.lastRenderedIndex&&(state.lastRenderedIndex=index,part.setValue(resolvedValue),part.commit())}))}});