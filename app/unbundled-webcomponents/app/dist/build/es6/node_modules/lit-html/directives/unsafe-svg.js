/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
import{reparentNodes}from"../lib/dom.js";import{isPrimitive}from"../lib/parts.js";import{directive,NodePart}from"../lit-html.js";const previousValues=new WeakMap;export const unsafeSVG=directive(value=>part=>{if(!(part instanceof NodePart))throw new Error("unsafeSVG can only be used in text bindings");const previousValue=previousValues.get(part);if(void 0!==previousValue&&isPrimitive(value)&&value===previousValue.value&&part.value===previousValue.fragment)return;const template=document.createElement("template");template.innerHTML=`<svg>${value}</svg>`;const content=template.content,svgElement=content.firstChild;content.removeChild(svgElement),reparentNodes(content,svgElement.firstChild);const fragment=document.importNode(content,!0);part.setValue(fragment),previousValues.set(part,{value,fragment})});