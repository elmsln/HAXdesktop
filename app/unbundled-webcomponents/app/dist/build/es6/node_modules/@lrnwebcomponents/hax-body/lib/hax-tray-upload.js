import{LitElement,html,css}from"../../../lit-element/lit-element.js";import{winEventsElement}from"../../utils/utils.js";import{HAXStore}from"./hax-store.js";import"../../../@vaadin/vaadin-upload/vaadin-upload.js";class HaxTrayUpload extends(winEventsElement(LitElement)){static get styles(){return[css`
        :host {
          display: block;
        }
        input[hidden] {
          display: none;
        }
        vaadin-upload::part(file-list) {
          display: none;
        }
      `]}static get tag(){return"hax-tray-upload"}constructor(){super(),this.__winEvents={"hax-app-picker-selection":"_haxAppPickerSelection","place-holder-file-drop":"_placeHolderFileDrop"}}render(){return html`
      <input type="text" id="url" hidden />
      <vaadin-upload
        @upload-before="${this._fileAboutToUpload}"
        @upload-response="${this._fileUploadResponse}"
        form-data-name="file-upload"
        id="fileupload"
      ></vaadin-upload>
    `}newAssetConfigure(){let values={source:this.shadowRoot.querySelector("#url").value,title:this.shadowRoot.querySelector("#url").value};HAXStore.insertLogicFromValues(values,this)}_placeHolderFileDrop(e){HAXStore.activePlaceHolder=e.detail.placeHolderElement,this.shadowRoot.querySelector("#fileupload")._onDrop(e.detail)}_fileUploadResponse(e){this.editExistingNode=!0;let response=JSON.parse(e.detail.xhr.response),map=this.__appUsed.connection.operations.add.resultMap,data={},item={};for(var prop in void 0!==this._resolveObjectPath(map.item,response)&&(data=this._resolveObjectPath(map.item,response)),item.type=map.defaultGizmoType,map.gizmo)item[prop]=this._resolveObjectPath(map.gizmo[prop],data);void 0===item.url&&void 0!==item.source&&(item.url=item.source),void 0!==map.gizmo.type&&(item.type=this._resolveObjectPath(map.gizmo.type,data)),this.shadowRoot.querySelector("#url").value=item.url,this.newAssetConfigure()}_fileAboutToUpload(e){if(this.__allowUpload)this.__allowUpload=!1;else{e.preventDefault(),e.stopPropagation();let values={source:e.detail.file.name,type:e.detail.file.type};var type=HAXStore.guessGizmoType(values);let targets=HAXStore.getHaxAppStoreTargets(type);1===targets.length?this._haxAppPickerSelection({detail:targets[0]}):0!==targets.length?HAXStore.haxAppPicker.presentOptions(targets,type,"Where would you like to upload this "+type+"?","app"):HAXStore.toast("Sorry, you don't have a storage location that can handle "+type+" uploads!",5e3)}}_haxAppPickerSelection(e){let connection=e.detail.connection;this.__appUsed=e.detail,this.shadowRoot.querySelector("#fileupload").method=connection.operations.add.method;let requestEndPoint=connection.protocol+"://"+connection.url;"/"!=requestEndPoint.substr(requestEndPoint.length-1)&&(requestEndPoint+="/"),void 0!==connection.operations.add.endPoint&&(requestEndPoint+=connection.operations.add.endPoint),null!=HAXStore.connectionRewrites.appendUploadEndPoint&&(requestEndPoint+="?"+HAXStore.connectionRewrites.appendUploadEndPoint),null!=HAXStore.connectionRewrites.appendJwt&&(requestEndPoint+="&"+HAXStore.connectionRewrites.appendJwt+"="+localStorage.getItem(HAXStore.connectionRewrites.appendJwt)),this.shadowRoot.querySelector("#fileupload").headers=connection.headers,this.shadowRoot.querySelector("#fileupload").target=requestEndPoint,this.__allowUpload=!0,this.shadowRoot.querySelector("#fileupload").uploadFiles()}_resolveObjectPath(path,obj){return path.split(".").reduce((function(prev,curr){return prev?prev[curr]:null}),obj||self)}}window.customElements.define(HaxTrayUpload.tag,HaxTrayUpload);export{HaxTrayUpload};