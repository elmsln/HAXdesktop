import{LitElement,html,css}from"../../../lit-element/lit-element.js";import"./hax-tray-button.js";import{HAXStore}from"./hax-store.js";import{autorun,toJS}from"../../../mobx/dist/mobx.esm.js";class HaxAppBrowser extends LitElement{static get styles(){return[css`
        :host {
          display: block;
        }
        :host *[hidden] {
          display: none;
        }
        .toolbar-inner {
          display: block;
          padding: 0;
          width: 100%;
        }
        .item-wrapper {
          text-align: center;
        }
      `]}constructor(){super(),this.addEventListener("hax-tray-button-click",e=>{"search-selected"===e.detail.eventName&&(this.searching=!0,HAXStore.activeApp=toJS(this.appList[e.detail.index]))}),this.searching=!1,this.appList=[],this.activeApp=null,this.hasActive=!1,import("./hax-app-search.js"),autorun(()=>{this.appList=toJS(HAXStore.appList)}),autorun(()=>{this.activeApp=toJS(HAXStore.activeApp)})}render(){return html`
      <div class="item-wrapper">
        ${this.appList.map(app=>html`
            <hax-tray-button
              dark-bg
              index="${app.index}"
              label="${app.details.title}"
              icon="${app.details.icon}"
              color="${app.details.color}"
              event-name="search-selected"
              event-data="${app.index}"
            ></hax-tray-button>
          `)}
      </div>
      <hax-app-search
        id="haxappsearch"
        .hidden="${!this.searching}"
      ></hax-app-search>
      <slot></slot>
    `}static get tag(){return"hax-app-browser"}static get properties(){return{search:{type:String},searching:{type:Boolean,reflect:!0},activeApp:{type:Object},hasActive:{reflect:!0,type:Boolean,attribute:"has-active"},appList:{type:Array}}}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{"activeApp"==propName&&this[propName]&&this._activeAppChanged(this[propName],oldValue),"appList"==propName&&this[propName]&&this.shadowRoot&&(this.searching=!1)})}_activeAppChanged(newValue,oldValue){this.hasActive=void 0!==oldValue&&null!=newValue}firstUpdated(changedProperties){super.firstUpdated&&super.firstUpdated(changedProperties),this.searching=!1}}window.customElements.define(HaxAppBrowser.tag,HaxAppBrowser);export{HaxAppBrowser};