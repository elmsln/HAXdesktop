/**
 * Copyright 2020 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{svg,css,LitElement}from"../../../lit-element/lit-element.js";import{SimpleIconsetStore}from"./simple-iconset.js";export const SimpleIconBehaviors=function(SuperClass){return class extends SuperClass{static get styles(){return[super.styles||[],css`
          :host {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            position: relative;
            vertical-align: middle;
            height: var(--simple-icon-height, 24px);
            width: var(--simple-icon-width, 24px);
          }
          :host([hidden]) {
            display: none;
          }
          svg {
            height: var(--simple-icon-height, 24px);
            width: var(--simple-icon-width, 24px);
            max-height: var(--simple-icon-height, 24px);
            max-width: var(--simple-icon-width, 24px);
          }
          feFlood {
            flood-color: var(--simple-icon-color, currentColor);
          }
          svg {
            pointer-events: none;
          }
        `]}render(){return svg`
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" preserveAspectRatio="xMidYMid meet">
          <filter
            color-interpolation-filters="sRGB"
            x="0"
            y="0"
            height="24px"
            width="24px"
          >
            ${this.feFlood}
            <feComposite operator="in" in="COLOR" in2="SourceAlpha" />
          </filter>
          <image
            xlink:href=""
            width="24px"
            height="24px"
            focusable="false"
            preserveAspectRatio="xMidYMid meet"
          ></image>
        </svg>
      `}get feFlood(){return this.noColorize?"":svg`<feFlood result="COLOR" />`}static get properties(){return{...super.properties,src:{type:String},noColorize:{type:Boolean,attribute:"no-colorize"},icon:{type:String,attribute:"icon",reflect:!0}}}constructor(){super(),this.noColorize=!1}firstUpdated(changedProperties){super.firstUpdated&&super.firstUpdated(changedProperties);const randomId="f-"+Math.random().toString().slice(2,10);this.shadowRoot.querySelector("image").style.filter=`url(#${randomId})`,this.shadowRoot.querySelector("filter").setAttribute("id",randomId)}setSrcByIcon(context){return this.src=SimpleIconsetStore.getIcon(this.icon,context),this.src}updated(changedProperties){super.updated&&super.updated(changedProperties),changedProperties.forEach((oldValue,propName)=>{"icon"==propName&&(this[propName]?this.setSrcByIcon(this):this.src=null),"src"==propName&&this[propName]&&this.shadowRoot.querySelector("image").setAttribute("xlink:href",`${this[propName]}`)})}}};class SimpleIconLite extends(SimpleIconBehaviors(LitElement)){static get tag(){return"simple-icon-lite"}}customElements.define(SimpleIconLite.tag,SimpleIconLite);export{SimpleIconLite};