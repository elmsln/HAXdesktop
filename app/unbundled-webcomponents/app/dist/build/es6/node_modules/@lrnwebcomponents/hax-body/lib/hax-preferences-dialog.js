import{html,css,LitElement}from"../../../lit-element/lit-element.js";import{HaxSchematizer,HaxElementizer}from"../../hax-body-behaviors/lib/HAXFields.js";import"../../simple-icon/lib/simple-icon-lite.js";import"../../simple-icon/lib/simple-icon-button.js";import"../../simple-fields/simple-fields.js";import{HAXStore}from"./hax-store.js";import{autorun,toJS}from"../../../mobx/dist/mobx.esm.js";class HaxPreferencesDialog extends LitElement{static get styles(){return[css`
        :host {
          display: block;
        }
        .title {
          position: relative;
          padding: 16px;
          outline: 0;
          font-weight: 600;
          text-align: left;
          margin: 0;
          background-color: var(--hax-color-menu-heading-bg, #eeeeee);
          color: var(--hax-color-menu-heading-color, black);
          font-size: 18px;
          line-height: 18px;
          font-family: "Noto Serif", serif;
        }
        .pref-container {
          text-align: left;
          padding: 16px;
        }
        #link {
          color: #81a3a9;
          font-size: 18px;
          padding: 16px;
          font-style: italic;
        }
        simple-icon-button {
          float: right;
        }
      `]}constructor(){super(),this.hideLink=!1,this.title="Advanced settings",this.schema=[{property:"haxVoiceCommands",title:"Voice commands",description:"Experimental: Voice based control system",inputMethod:"boolean",value:!1}],this.schemaValues={haxVoiceCommands:!1},autorun(()=>{this.globalPreferences=toJS(HAXStore.globalPreferences),this.schemaValues=toJS(HAXStore.globalPreferences)})}closeBtn(e){this.dispatchEvent(new CustomEvent("hax-tray-button-click",{bubbles:!0,cancelable:!0,composed:!0,detail:{eventName:"open-preferences",index:0,value:!0}}))}render(){return html`
      <h3 class="title">
        <simple-icon-lite icon="hax:settings"></simple-icon-lite>
        ${this.title}
        <simple-icon-button
          icon="close"
          @click="${this.closeBtn}"
        ></simple-icon-button>
      </h3>
      <div style="height: 100%; overflow: auto;" class="pref-container">
        <simple-fields
          id="settingsform"
          .schematizer="${HaxSchematizer}"
          .elementizer="${HaxElementizer}"
        >
        </simple-fields>
      </div>
      ${this.hideLink?"":html`<a
            href="https://haxtheweb.org/"
            rel="noopener"
            id="link"
            target="_blank"
            >Learn more about HAX</a
          >`}
    `}static get tag(){return"hax-preferences-dialog"}static get properties(){return{hideLink:{type:Boolean},title:{type:String},schema:{type:Object},globalPreferences:{type:Object}}}firstUpdated(changedProperties){this.shadowRoot.querySelector("#settingsform").fields=[...this.schema],this.shadowRoot.querySelector("#settingsform").value={...this.schemaValues},this.shadowRoot.querySelector("#settingsform").addEventListener("value-changed",this.__valueChangedEvent.bind(this))}__valueChangedEvent(e){e.detail.value&&(HAXStore.globalPreferences={...e.detail.value})}reloadPreferencesForm(){this.shadowRoot.querySelector("#settingsform").fields=[...this.schema],this.shadowRoot.querySelector("#settingsform").value={...this.schemaValues}}}window.customElements.define(HaxPreferencesDialog.tag,HaxPreferencesDialog);export{HaxPreferencesDialog};