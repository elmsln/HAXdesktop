String.prototype.replaceAll||(String.prototype.replaceAll=function(find,replace){return this.split(find).join(replace)});class SimpleIconset extends HTMLElement{static get tag(){return"simple-iconset"}constructor(){super(),this.iconsets={},this.needsHydrated=[]}registerIconset(name,icons={}){if("object"==typeof icons?this.iconsets[name]={...icons}:"string"==typeof icons&&(this.iconsets[name]=icons),this.needsHydrated.length>0){let list=[];this.needsHydrated.forEach((item,index)=>{item.setSrcByIcon(this)&&list.push(index)}),list.reverse().forEach(val=>{this.needsHydrated.splice(val,1)})}}getIcon(val,context){let ary=val.replaceAll("/","-").split(":");if(1===ary.length&&(ary=["icons",val]),2==ary.length&&this.iconsets[ary[0]]){if("string"!=typeof this.iconsets[ary[0]]&&this.iconsets[ary[0]][ary[1]]&&"function"!=typeof this.iconsets[ary[0]][ary[1]])return this.iconsets[ary[0]][ary[1]];if(ary[1])return`${this.iconsets[ary[0]]}${ary[1]}.svg`}return context!=this&&this.needsHydrated.push(context),null}}function pathResolver(base,path=""){return pathFromUrl(decodeURIComponent(base))+path}function pathFromUrl(url){return url.substring(0,url.lastIndexOf("/")+1)}customElements.define(SimpleIconset.tag,SimpleIconset),window.SimpleIconset=window.SimpleIconset||{},window.SimpleIconset.requestAvailability=()=>(null==window.SimpleIconset.instance&&(window.SimpleIconset.instance=document.createElement("simple-iconset")),document.body.appendChild(window.SimpleIconset.instance),window.SimpleIconset.instance);const SimpleIconsetStore=window.SimpleIconset.requestAvailability();export{SimpleIconset,SimpleIconsetStore,pathResolver,pathFromUrl};