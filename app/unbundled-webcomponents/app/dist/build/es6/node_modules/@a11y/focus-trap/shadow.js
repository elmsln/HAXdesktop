export function queryShadowRoot(root,skipNode,isMatch,maxDepth=20,depth=0){let matches=[];if(depth>=maxDepth)return matches;const traverseSlot=$slot=>{const assignedNodes=$slot.assignedNodes().filter(node=>1===node.nodeType);return assignedNodes.length>0?queryShadowRoot(assignedNodes[0].parentElement,skipNode,isMatch,maxDepth,depth+1):[]},children=Array.from(root.children||[]);for(const $child of children)skipNode($child)||(isMatch($child)&&matches.push($child),null!=$child.shadowRoot?matches.push(...queryShadowRoot($child.shadowRoot,skipNode,isMatch,maxDepth,depth+1)):"SLOT"===$child.tagName?matches.push(...traverseSlot($child)):matches.push(...queryShadowRoot($child,skipNode,isMatch,maxDepth,depth+1)));return matches}