/**
 * @license
 * Copyright 2020 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
export var KEY={UNKNOWN:"Unknown",BACKSPACE:"Backspace",ENTER:"Enter",SPACEBAR:"Spacebar",PAGE_UP:"PageUp",PAGE_DOWN:"PageDown",END:"End",HOME:"Home",ARROW_LEFT:"ArrowLeft",ARROW_UP:"ArrowUp",ARROW_RIGHT:"ArrowRight",ARROW_DOWN:"ArrowDown",DELETE:"Delete"};var normalizedKeys=new Set;normalizedKeys.add(KEY.BACKSPACE),normalizedKeys.add(KEY.ENTER),normalizedKeys.add(KEY.SPACEBAR),normalizedKeys.add(KEY.PAGE_UP),normalizedKeys.add(KEY.PAGE_DOWN),normalizedKeys.add(KEY.END),normalizedKeys.add(KEY.HOME),normalizedKeys.add(KEY.ARROW_LEFT),normalizedKeys.add(KEY.ARROW_UP),normalizedKeys.add(KEY.ARROW_RIGHT),normalizedKeys.add(KEY.ARROW_DOWN),normalizedKeys.add(KEY.DELETE);var KEY_CODE_BACKSPACE=8,KEY_CODE_ENTER=13,KEY_CODE_SPACEBAR=32,KEY_CODE_PAGE_UP=33,KEY_CODE_PAGE_DOWN=34,KEY_CODE_END=35,KEY_CODE_HOME=36,KEY_CODE_ARROW_LEFT=37,KEY_CODE_ARROW_UP=38,KEY_CODE_ARROW_RIGHT=39,KEY_CODE_ARROW_DOWN=40,KEY_CODE_DELETE=46,mappedKeyCodes=new Map;mappedKeyCodes.set(KEY_CODE_BACKSPACE,KEY.BACKSPACE),mappedKeyCodes.set(KEY_CODE_ENTER,KEY.ENTER),mappedKeyCodes.set(KEY_CODE_SPACEBAR,KEY.SPACEBAR),mappedKeyCodes.set(KEY_CODE_PAGE_UP,KEY.PAGE_UP),mappedKeyCodes.set(KEY_CODE_PAGE_DOWN,KEY.PAGE_DOWN),mappedKeyCodes.set(KEY_CODE_END,KEY.END),mappedKeyCodes.set(KEY_CODE_HOME,KEY.HOME),mappedKeyCodes.set(KEY_CODE_ARROW_LEFT,KEY.ARROW_LEFT),mappedKeyCodes.set(KEY_CODE_ARROW_UP,KEY.ARROW_UP),mappedKeyCodes.set(KEY_CODE_ARROW_RIGHT,KEY.ARROW_RIGHT),mappedKeyCodes.set(KEY_CODE_ARROW_DOWN,KEY.ARROW_DOWN),mappedKeyCodes.set(KEY_CODE_DELETE,KEY.DELETE);var navigationKeys=new Set;navigationKeys.add(KEY.PAGE_UP),navigationKeys.add(KEY.PAGE_DOWN),navigationKeys.add(KEY.END),navigationKeys.add(KEY.HOME),navigationKeys.add(KEY.ARROW_LEFT),navigationKeys.add(KEY.ARROW_UP),navigationKeys.add(KEY.ARROW_RIGHT),navigationKeys.add(KEY.ARROW_DOWN);export function normalizeKey(evt){var key=evt.key;if(normalizedKeys.has(key))return key;var mappedKey=mappedKeyCodes.get(evt.keyCode);return mappedKey||KEY.UNKNOWN}export function isNavigationEvent(evt){return navigationKeys.has(normalizeKey(evt))}