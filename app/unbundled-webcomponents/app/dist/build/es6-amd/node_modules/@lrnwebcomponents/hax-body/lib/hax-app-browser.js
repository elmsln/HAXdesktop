define(["exports","require","../../../lit-element/lit-element.js","./hax-tray-button.js","./hax-store.js","../../../mobx/dist/mobx.esm.js"],(function(_exports,_require,_litElement,_haxTrayButton,_haxStore,_mobxEsm){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HaxAppBrowser=void 0,_require=babelHelpers.interopRequireWildcard(_require);class HaxAppBrowser extends _litElement.LitElement{static get styles(){return[_litElement.css`
        :host {
          display: block;
        }
        :host *[hidden] {
          display: none;
        }
        .toolbar-inner {
          display: block;
          padding: 0;
          width: 100%;
        }
        .item-wrapper {
          text-align: center;
        }
      `]}constructor(){super(),this.addEventListener("hax-tray-button-click",e=>{"search-selected"===e.detail.eventName&&(this.searching=!0,_haxStore.HAXStore.activeApp=(0,_mobxEsm.toJS)(this.appList[e.detail.index]))}),this.searching=!1,this.appList=[],this.activeApp=null,this.hasActive=!1,new Promise((res,rej)=>_require.default(["./hax-app-search.js"],res,rej)),(0,_mobxEsm.autorun)(()=>{this.appList=(0,_mobxEsm.toJS)(_haxStore.HAXStore.appList)}),(0,_mobxEsm.autorun)(()=>{this.activeApp=(0,_mobxEsm.toJS)(_haxStore.HAXStore.activeApp)})}render(){return _litElement.html`
      <div class="item-wrapper">
        ${this.appList.map(app=>_litElement.html`
            <hax-tray-button
              dark-bg
              index="${app.index}"
              label="${app.details.title}"
              icon="${app.details.icon}"
              color="${app.details.color}"
              event-name="search-selected"
              event-data="${app.index}"
            ></hax-tray-button>
          `)}
      </div>
      <hax-app-search
        id="haxappsearch"
        .hidden="${!this.searching}"
      ></hax-app-search>
      <slot></slot>
    `}static get tag(){return"hax-app-browser"}static get properties(){return{search:{type:String},searching:{type:Boolean,reflect:!0},activeApp:{type:Object},hasActive:{reflect:!0,type:Boolean,attribute:"has-active"},appList:{type:Array}}}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{"activeApp"==propName&&this[propName]&&this._activeAppChanged(this[propName],oldValue),"appList"==propName&&this[propName]&&this.shadowRoot&&(this.searching=!1)})}_activeAppChanged(newValue,oldValue){this.hasActive=void 0!==oldValue&&null!=newValue}firstUpdated(changedProperties){super.firstUpdated&&super.firstUpdated(changedProperties),this.searching=!1}}_exports.HaxAppBrowser=HaxAppBrowser,window.customElements.define(HaxAppBrowser.tag,HaxAppBrowser)}));