define(["exports","../../../lit-element/lit-element.js","../../../lit-html/lib/render.js","../../../lit-html/directives/unsafe-html.js","./simple-popover-manager.js"],(function(_exports,_litElement,_render,_unsafeHtml,_simplePopoverManager){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.SimpleTourManager=_exports.TourStop=_exports.SimpleTour=void 0;class SimpleTour extends _litElement.LitElement{constructor(){super(),this.stacks={},this.orientation="lr",this.active=null,this.tourInfo={},this.activeElementDelay=500,this.stop=-1,window.addEventListener("simple-tour-register",this.registerNewTourEvent.bind(this)),window.addEventListener("simple-tour-create-tour-stop",this.createTourStopEvent.bind(this))}registerNewTourEvent(e){this.registerNewTour(e.detail)}registerNewTour(newTour){return this.stacks[newTour.key]||(this.stacks[newTour.key]=[]),this.tourInfo[newTour.key]||(this.tourInfo[newTour.key]=newTour),this.stacks[newTour.key]}createTourStopEvent(e){this.createTourStop(e.detail.name,e.detail.target,e.detail.title,e.detail.description)}createTourStop(name,target,title,description){let s=new TourStop;return s.target=target,s.title=title,s.description=description,this.addStops(name,[s]),s}removeTarget(name,target){let dropList=[];this.stacks[name].forEach((item,index)=>{item.target===target&&dropList.push(index)}),dropList.forEach(i=>{this.stacks[name].splice(i,1)})}addStops(name,stops){this.stacks[name]||(this.stacks[name]=[]),this.stacks[name]=this.stacks[name].concat(stops)}hasNext(){return this.stop<this.stacks[this.active].length-1}hasPrev(){return this.stop>0}nextStop(e){this.stop<this.stacks[this.active].length&&(this.stop+=1)}prevStop(e){this.stop>0&&(this.stop-=1)}startTour(name){this.active=name}stopTour(e){window.SimplePopoverManager.requestAvailability().setPopover(this,this,!1,this.orientation),this.stop=-1,this.active=null}tourButtons(){return _litElement.html` <h3>
        ${this.tourInfo[this.active].name}
        <span style="margin-left:16px"
          >${this.stop+1}/${this.stacks[this.active].length}</span
        >
      </h3>
      <button
        @click="${this.prevStop.bind(this)}"
        ?disabled="${!this.hasPrev()}"
      >
        Previous
      </button>
      <button
        @click="${this.nextStop.bind(this)}"
        ?disabled="${!this.hasNext()}"
      >
        Next</button
      ><button @click="${this.stopTour.bind(this)}">Stop tour</button>`}scrollHere(node){"function"==typeof node.scrollIntoViewIfNeeded?node.scrollIntoViewIfNeeded(!0):node.scrollIntoView({behavior:"smooth",inline:"center"})}managerReset(){this.stopTour()}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{if("active"==propName&&this.active&&(this.stop=0),"stop"==propName&&-1!=this.stop||"active"==propName&&this.active){(0,_render.render)(document.createElement("div"),window.SimplePopoverManager.requestAvailability());let content=_litElement.html`${this.tourButtons()}
          <h3>
            ${(0,_unsafeHtml.unsafeHTML)("<span>"+this.stacks[this.active][this.stop].title+"</span>")}
          </h3>
          ${(0,_unsafeHtml.unsafeHTML)("<p>"+this.stacks[this.active][this.stop].description+"</p>")}${this.tourInfo[this.active].style?(0,_unsafeHtml.unsafeHTML)("<style>"+this.tourInfo[this.active].style+"</style>"):""}`;(0,_render.render)(content,window.SimplePopoverManager.requestAvailability()),window.SimplePopoverManager.requestAvailability().setPopover(this,this.stacks[this.active][this.stop].target,!0,this.orientation),this.scrollHere(this.stacks[this.active][this.stop].target);let target=this.stacks[this.active][this.stop].target,part=this.stacks[this.active][this.stop].target.getAttribute("part");target.setAttribute("part","simple-tour-active"),setTimeout(()=>{null==part||"simple-tour-active"==part?target.removeAttribute("part"):target.setAttribute("part",part)},this.activeElementDelay)}})}static get properties(){return{stop:{type:Number},active:{type:String},stacks:{type:Object},activeElementDelay:{type:Number}}}}_exports.SimpleTour=SimpleTour;class TourStop{constructor(){this.target=null,this.title="Title",this.description="<p>Description</p>"}}_exports.TourStop=TourStop,customElements.define("simple-tour",SimpleTour),window.SimpleTourManager=window.SimpleTourManager||{},window.SimpleTourManager.requestAvailability=()=>(window.SimpleTourManager.instance||(window.SimpleTourManager.instance=document.createElement("simple-tour"),document.body.appendChild(window.SimpleTourManager.instance)),window.SimpleTourManager.instance);const SimpleTourManager=window.SimpleTourManager.requestAvailability();_exports.SimpleTourManager=SimpleTourManager}));