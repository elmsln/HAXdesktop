define(["exports","require","../../../../lit-element/lit-element.js","../rich-text-editor-styles.js","../../../responsive-utility/responsive-utility.js","../singletons/rich-text-editor-selection.js","../../../simple-icon/lib/simple-icon-lite.js","../../../simple-icon/lib/simple-icons.js","../../../simple-icon/lib/simple-icon-button-lite.js","../../../hax-iconset/lib/simple-hax-iconset.js"],(function(_exports,_require,_litElement,_richTextEditorStyles,_responsiveUtility,_richTextEditorSelection,_simpleIconLite,_simpleIcons,_simpleIconButtonLite,_simpleHaxIconset){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.RichTextEditorToolbarBehaviors=_exports.RichTextEditorToolbar=void 0,_require=babelHelpers.interopRequireWildcard(_require);
/**
   * Copyright 2019 Penn State University
   * @license Apache-2.0, see License.md for full text.
   */
const RichTextEditorToolbarBehaviors=function(SuperClass){return class extends((0,_richTextEditorStyles.RichTextEditorStyles)(SuperClass)){static get tag(){return"rich-text-editor-toolbar"}static get stickyStyles(){return[_litElement.css`
          :host([sticky]) {
            position: sticky;
            top: 0;
          }
        `]}static get baseStyles(){return[...super.styles,_litElement.css`
          :host([hidden]) {
            display: none;
          }
          #toolbar {
            display: flex;
            opacity: 1;
            z-index: 1;
            margin: 0;
            align-items: stretch;
            flex-wrap: wrap;
            justify-content: flex-start;
            background-color: var(--rich-text-editor-bg);
            border: var(--rich-text-editor-border);
            font-size: 12px;
            transition: all 0.5s;
          }
          #toolbar[aria-hidden="true"] {
            visibility: hidden;
            opacity: 0;
            height: 0;
          }
          #toolbar .group {
            display: flex;
            flex-wrap: nowrap;
            justify-content: space-evenly;
            align-items: stretch;
            padding: 0 3px;
          }
          #toolbar .group:not(:last-of-type) {
            margin-right: 3px;
            border-right: var(--rich-text-editor-border);
          }
          #toolbar .button {
            display: flex;
            flex: 0 0 auto;
            align-items: stretch;
          }
          #toolbar #morebutton {
            flex: 1 0 auto;
            justify-content: flex-end;
          }
          /* hide more button if all buttons are displayed */
          #toolbar[responsive-size="xs"] #morebutton[collapse-max="xs"],
          #toolbar[responsive-size="sm"] #morebutton[collapse-max*="s"],
          #toolbar[responsive-size="md"] #morebutton:not([collapse-max*="l"]),
          #toolbar[responsive-size="lg"] #morebutton:not([collapse-max="xl"]),
          #toolbar[responsive-size="xl"] #morebutton,
          /* hide buttons if they should be collaped until */
          #toolbar[responsive-size="xs"][collapsed] *[collapsed-until*="m"],
          #toolbar[responsive-size="xs"][collapsed] *[collapsed-until*="l"],
          #toolbar[responsive-size="sm"][collapsed] *[collapsed-until="md"],
          #toolbar[responsive-size="sm"][collapsed] *[collapsed-until*="l"],
          #toolbar[responsive-size="md"][collapsed] *[collapsed-until*="l"],
          #toolbar[responsive-size="lg"][collapsed] *[collapsed-until="xl"] {
            display: none;
          }
        `]}static get styles(){return[...this.baseStyles,...this.stickyStyles]}get toolbarTemplate(){return _litElement.html`
        <div
          id="toolbar"
          aria-live="polite"
          aria-hidden="${this.controls||this.alwaysVisible?"false":"true"}"
          ?collapsed="${this.collapsed}"
          @selectnode="${e=>this.selectNode(e.detail)}"
          @selectnodecontents="${e=>this.selectNodeContents(e.detail)}"
          @selectrange="${e=>this.selectRange(e.detail)}"
        >
          <rich-text-editor-more-button
            id="morebutton"
            class="button"
            aria-controls="toolbar"
            icon="${this.moreIcon}"
            label="${this.moreLabel}"
            ?show-text-label="${this.moreShowTextLabel}"
            ?label-toggled="${this.moreLabelToggled}"
            ?toggled="${!this.collapsed}"
            @click="${this._toggleMore}"
          >
          </rich-text-editor-more-button>
        </div>
      `}render(){return _litElement.html` ${this.toolbarTemplate} `}static get properties(){return{alwaysVisible:{type:Boolean,attribute:"always-visible",reflect:!0},buttons:{name:"buttons",type:Array},collapsed:{name:"collapsed",type:Boolean,attribute:"collapsed"},config:{name:"config",type:Object,attribute:"config"},editor:{name:"editor",type:Object,attribute:"editor"},id:{name:"id",type:String,attribute:"id",reflect:!0},moreIcon:{name:"moreIcon",type:String,attribute:"more-icon"},moreLabel:{name:"moreLabel",type:String,attribute:"more-label"},moreLabelToggled:{name:"moreLabelToggled",type:String,attribute:"more-label-toggled",value:"Fewer Buttons"},moreShowTextLabel:{name:"moreShowTextLabel",type:Boolean,attribute:"more-show-text-label"},responsiveSize:{name:"responsiveSize",type:String,attribute:"responsive-size",reflect:!0},savedSelection:{name:"savedSelection",type:Object},range:{name:"range",type:Object},registered:{type:Boolean},selectedNode:{type:Object},selectionAncestors:{type:Array},shortcutKeys:{name:"shortcutKeys",type:Array},sticky:{name:"sticky",type:Boolean,attribute:"sticky",reflect:!0},__clickableElement:{name:"__clickableElement",type:Array},__selection:{type:Object}}}constructor(){super(),new Promise((res,rej)=>_require.default(["../buttons/rich-text-editor-button.js"],res,rej)),new Promise((res,rej)=>_require.default(["../buttons/rich-text-editor-more-button.js"],res,rej)),new Promise((res,rej)=>_require.default(["../buttons/rich-text-editor-heading-picker.js"],res,rej)),new Promise((res,rej)=>_require.default(["../buttons/rich-text-editor-symbol-picker.js"],res,rej)),new Promise((res,rej)=>_require.default(["../buttons/rich-text-editor-underline.js"],res,rej)),new Promise((res,rej)=>_require.default(["../buttons/rich-text-editor-image.js"],res,rej)),new Promise((res,rej)=>_require.default(["../buttons/rich-text-editor-link.js"],res,rej)),new Promise((res,rej)=>_require.default(["../buttons/rich-text-editor-button-styles.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../../@polymer/iron-icons/iron-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../../@polymer/iron-icons/editor-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../../@polymer/iron-icons/image-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../md-extra-icons/md-extra-icons.js"],res,rej)),window.ResponsiveUtility.requestAvailability(),this.alwaysVisible=!1,this.collapsed=!0,this.config=[{label:"History",type:"button-group",buttons:[{command:"undo",icon:"undo",label:"Undo",shortcutKeys:"ctrl+z",type:"rich-text-editor-button"},{command:"redo",icon:"redo",label:"Redo",shortcutKeys:"ctrl+shift+z",type:"rich-text-editor-button"}]},{label:"Basic Inline Operations",type:"button-group",buttons:[{label:"Format",type:"rich-text-editor-heading-picker"},{command:"bold",icon:"editor:format-bold",label:"Bold",shortcutKeys:"ctrl+b",toggles:!0,type:"rich-text-editor-button"},{command:"italic",icon:"editor:format-italic",label:"Italics",shortcutKeys:"ctrl+i",toggles:!0,type:"rich-text-editor-button"},{command:"removeFormat",icon:"editor:format-clear",label:"Erase Format",type:"rich-text-editor-button"}]},{label:"Links",type:"button-group",buttons:[{icon:"link",label:"Link",shortcutKeys:"ctrl+k",type:"rich-text-editor-link"}]},{label:"Clipboard Operations",type:"button-group",buttons:[{command:"cut",icon:"content-cut",label:"Cut",shortcutKeys:"ctrl+x",type:"rich-text-editor-button"},{command:"copy",icon:"content-copy",label:"Copy",shortcutKeys:"ctrl+c",type:"rich-text-editor-button"},{command:"paste",icon:"content-paste",label:"Paste",shortcutKeys:"ctrl+v",type:"rich-text-editor-button"}]},{collapsedUntil:"md",label:"Subscript and Superscript",type:"button-group",buttons:[{command:"subscript",icon:"mdextra:subscript",label:"Subscript",toggles:!0,type:"rich-text-editor-button"},{command:"superscript",icon:"mdextra:superscript",label:"Superscript",toggles:!0,type:"rich-text-editor-button"}]},{collapsedUntil:"sm",icon:"editor:functions",label:"Insert Symbol",symbolTypes:["symbols"],type:"rich-text-editor-symbol-picker"},{collapsedUntil:"sm",label:"Lists and Indents",type:"button-group",buttons:[{command:"insertOrderedList",icon:"editor:format-list-numbered",label:"Ordered List",toggles:!0,type:"rich-text-editor-button"},{command:"insertUnorderedList",icon:"editor:format-list-bulleted",label:"Unordered List",toggles:!0,type:"rich-text-editor-button"},{collapsedUntil:"lg",command:"formatBlock",commandVal:"blockquote",label:"Blockquote",icon:"editor:format-quote",shortcutKeys:"ctrl+'",type:"rich-text-editor-button"},{command:"indent",icon:"editor:format-indent-increase",event:"text-indent",label:"Increase Indent",shortcutKeys:"ctrl+]",type:"rich-text-editor-button"},{command:"outdent",event:"text-outdent",icon:"editor:format-indent-decrease",label:"Decrease Indent",shortcutKeys:"ctrl+[",type:"rich-text-editor-button"}]}],this.moreIcon="more-vert",this.moreLabel="More Buttons",this.moreLabelToggled="Fewer Buttons",this.moreShowTextLabel=!1,this.responsiveSize="xs",this.sticky=!1,this.__clickableElement=[],this.shortcutKeys=[]}firstUpdated(changedProperties){super.firstUpdated(changedProperties),this.buttons=this._getButtons(),window.dispatchEvent(new CustomEvent("responsive-element",{detail:{element:this.shadowRoot.querySelector("#toolbar")}})),this.__selection=window.RichTextEditorSelection.requestAvailability(),this.register()}updated(changedProperties){super.updated(changedProperties),changedProperties.forEach((oldValue,propName)=>{"range"===propName&&this._rangeChange(),"editor"===propName&&this._editorChange()})}connectedCallback(){super.connectedCallback(),this.register()}disconnectedCallback(){super.disconnectedCallback(),this.register(!0)}get controls(){return this.editor?this.editor.getAttribute("id"):void 0}cancel(){this.dispatchEvent(new c("cancel",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}highlight(add=!0){this.dispatchEvent(new CustomEvent("highlight",{bubbles:!0,cancelable:!0,composed:!0,detail:add}))}register(remove=!1){window.dispatchEvent(new CustomEvent("register",{bubbles:!0,cancelable:!0,composed:!0,detail:{remove:remove,toolbar:this}}))}selectNode(node){this.dispatchEvent(new CustomEvent("selectnode",{bubbles:!0,cancelable:!0,composed:!0,detail:node}))}selectNodeContents(node){this.dispatchEvent(new CustomEvent("selectnodecontents",{bubbles:!0,cancelable:!0,composed:!0,detail:node}))}selectRange(range){this.dispatchEvent(new CustomEvent("selectrange",{bubbles:!0,cancelable:!0,composed:!0,detail:range}))}newEditor(editor){let content=document.createElement("rich-text-editor");editor.parentNode.insertBefore(content,editor),content.appendChild(editor)}pasteFromClipboard(){this.dispatchEvent(new CustomEvent("pastefromclipboard",{bubbles:!0,cancelable:!0,composed:!0,detail:this.editor}))}_addButton(child,parent){let button=document.createElement(child.type),keys=button.shortcutKeys?button.shortcutKeys.replace(/ctrl\+[xcv]/g,""):"";for(var key in this.shortcutKeys[keys]=button,child)button[key]=child[key];return button.setAttribute("class","button"),button.addEventListener("button-command",this._handleButton),button.inlineWidget&&this.push("__clickableElement",button.tag),parent.appendChild(button),button}_getButtons(){let toolbar=this.shadowRoot&&this.shadowRoot.querySelector("#toolbar")?this.shadowRoot.querySelector("#toolbar"):void 0;if(toolbar){let more=toolbar.querySelector("#morebutton"),max=0,sizes=["xs","sm","md","lg","xl"],temp=[];return toolbar.innerHTML="",this.shortcutKeys=[],this.config.forEach(item=>{if("button-group"===item.type){let group=document.createElement("div");group.setAttribute("class","group"),void 0!==item.collapsedUntil&&null!==item.collapsedUntil&&group.setAttribute("collapsed-until",item.collapsedUntil),max=Math.max(max,sizes.indexOf(item.collapsedUntil)),item.buttons.forEach(button=>{max=Math.max(max,sizes.indexOf(button.collapsedUntil)),(navigator.clipboard||"paste"!==button.command)&&temp.push(this._addButton(button,group))}),toolbar.appendChild(group)}else max=Math.max(max,sizes.indexOf(item.collapsedUntil)),(navigator.clipboard||"paste"!==item.command)&&temp.push(this._addButton(item,toolbar));toolbar.appendChild(more),more.collapseMax=sizes[max]}),temp}return[]}_editorChange(){this.range=void 0,this.c&&(this.breadcrumbs.controls=this.controls,this.breadcrumbs.sticky=this.sticky,this.breadcrumbs.controls=this.controls,this.breadcrumbs.hidden=!this.controls&&!this.alwaysVisible,this.editor&&this.editor.parentNode.insertBefore(this.breadcrumbs,this.editor.nextSibling))}_rangeChange(){this.range&&this.range.commonAncestorContainer&&this.editor&&this.editor.contains(this.range.commonAncestorContainer)&&(this.buttons.forEach(button=>{button.range=void 0,button.range=this.range,button.selectedNode=this.selectedNode,button.selectionAncestors=this.selectionAncestors}),this.breadcrumbs&&(this.breadcrumbs.controls=this.controls,this.breadcrumbs.selectionAncestors=this.selectionAncestors,this.breadcrumbs.hidden=!this.controls&&!this.alwaysVisible))}_toggleMore(e){this.collapsed=!this.collapsed}}};_exports.RichTextEditorToolbarBehaviors=RichTextEditorToolbarBehaviors;class RichTextEditorToolbar extends(RichTextEditorToolbarBehaviors(_litElement.LitElement)){}_exports.RichTextEditorToolbar=RichTextEditorToolbar,window.customElements.define(RichTextEditorToolbar.tag,RichTextEditorToolbar)}));