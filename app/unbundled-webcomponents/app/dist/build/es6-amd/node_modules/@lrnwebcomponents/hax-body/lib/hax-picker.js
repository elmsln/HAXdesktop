define(["exports","../../../lit-element/lit-element.js"],(function(_exports,_litElement){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HaxPicker=void 0;class HaxPicker extends _litElement.LitElement{static get styles(){return[_litElement.css`
        :host {
          display: block;
        }
        .button-list {
          display: block;
          text-align: left;
          overflow-x: hidden;
          overflow-y: auto;
          display: flex;
          flex-wrap: wrap;
          margin: 20px 0 0 0;
          padding: 0;
        }
      `]}constructor(){super(),this._elements=[],this.selectionList=[],this.pickerType="gizmo"}render(){return _litElement.html`
      <div class="button-list">
        ${this.selectionList.map((element,index)=>_litElement.html`
            <hax-tray-button
              dark-bg
              id="picker-item-${index}"
              @click="${this._selected}"
              data-selected="${index}"
              label="${element.title}"
              icon="${element.icon}"
              ?color-meaning="${2===this.selectionList.length}"
            >
            </hax-tray-button>
          `)}
      </div>
    `}static get tag(){return"hax-picker"}static get properties(){return{_elements:{type:Array},selectionList:{type:Array},pickerType:{type:String,attribute:"picker-type"}}}buildOptions(elements,type="element",title="Select an option",pickerType="gizmo"){this.pickerType=pickerType;var tmp=[];switch(pickerType){case"gizmo":for(var i in elements)elements[i].__type=type,tmp.push({icon:elements[i].gizmo.icon,title:elements[i].gizmo.title,color:elements[i].gizmo.color});break;case"app":for(var i in elements)tmp.push({icon:elements[i].details.icon,title:elements[i].details.title,color:elements[i].details.color});break;default:tmp=elements}this._elements=elements,this.selectionList=[...tmp],setTimeout(()=>{this.shadowRoot.querySelector("#picker-item-0").focus()},50)}_selected(e){let key=e.target.getAttribute("data-selected");e.preventDefault(),e.stopPropagation(),void 0!==this._elements[key]&&("gizmo"==this.pickerType?(this._elements[key].replace=!0,this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:this._elements[key]}))):this.dispatchEvent(new CustomEvent("hax-app-picker-selection",{bubbles:!0,cancelable:!0,composed:!0,detail:this._elements[key]}))),this.close()}close(){window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,cancelable:!0,detail:{}}))}}_exports.HaxPicker=HaxPicker,window.customElements.define(HaxPicker.tag,HaxPicker)}));