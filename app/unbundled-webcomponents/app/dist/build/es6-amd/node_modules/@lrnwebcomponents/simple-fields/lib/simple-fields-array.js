define(["exports","../../../lit-element/lit-element.js","./simple-fields-fieldset.js","../../simple-icon/simple-icon.js","../../simple-icon/lib/simple-icons.js","./simple-fields-array-item.js"],(function(_exports,_litElement,_simpleFieldsFieldset,_simpleIcon,_simpleIcons,_simpleFieldsArrayItem){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.SimpleFieldsArray=void 0;class SimpleFieldsArray extends _simpleFieldsFieldset.SimpleFieldsFieldset{static get tag(){return"simple-fields-array"}static get styles(){return[...super.styles,_litElement.css`
        fieldset {
          padding: 0 var(--simple-fields-margin-small, 8px)
            var(--simple-fields-margin-small, 8px);
        }
        #item-fields {
          margin: var(--simple-fields-margin-small, 8px) 0;
          clear: both;
          z-index: 3;
        }
        #top {
          display: flex;
          align-items: flex-end;
          justify-content: flex-end;
        }
        #description {
          flex: 1 1 auto;
          padding: var(--simple-fields-margin-small, 2px) 0;
          margin-right: var(--simple-fields-margin, 8px);
          min-height: 24px;
        }
        #add {
          float: right;
        }
        button {
          font-family: var(--simple-fields-detail-font-family, sans-serif);
          font-size: var(--simple-fields-detail-font-size, 12px);
          line-height: var(--simple-fields-detail-line-height, 22px);
          padding: var(--simple-fields-margin-small, 2px);
          margin: 0 var(--simple-fields-margin-small, 2px) 0 0;
          z-index: 1;
          text-transform: unset;
        }
        .expanded {
          transform: rotate(-90deg);
          transition: transform 0.5s ease;
        }
        .collapsed {
          transform: rotate(0deg);
          transition: transform 0.5s ease;
        }
      `]}static get properties(){return{...super.properties,count:{type:Number},expanded:{type:Boolean}}}render(){return _litElement.html` <fieldset>${this.legend}${this.fields}</fieldset> `}get fields(){return _litElement.html`
      <div id="top">
        ${this.desc}
        <button
          id="expand"
          controls="item-fields"
          @click="${e=>this.toggle()}"
        >
          ${this.expanded?"Collapse All":"Expand All"}
          <simple-icon
            class="${this.expanded?"expanded":"collapsed"}"
            aria-hidden="true"
            icon="expand-more"
          ></simple-icon>
        </button>
      </div>
      <div id="item-fields" aria-live="polite">
        <slot></slot>
        <button
          id="add"
          controls="item-fields"
          @click="${e=>this._handleAdd()}"
        >
          Add Item
          <simple-icon aria-hidden="true" icon="add"></simple-icon>
        </button>
      </div>
    `}constructor(){super(),this.count=0,this.expanded=!1,this.disableAdd=!1}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{"expanded"===propName&&this.querySelectorAll("simple-fields-array-item").forEach(item=>item.setAttribute("aria-expanded",this.expanded))})}buildItem(id){let item=document.createElement("simple-fields-array-item");return item.id=id,item.expanded=this.expanded,item.innerHTML='\n      <slot name="sort"></slot>\n      <slot name="preview"></slot>\n      <slot></slot>',this.appendChild(item),item.addEventListener("remove",e=>this._handleRemove(e)),item}_handleAdd(){this.dispatchEvent(new CustomEvent("add",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_handleRemove(e){e.stopPropagation(),e.stopImmediatePropagation(),this.dispatchEvent(new CustomEvent("remove",{bubbles:!0,cancelable:!0,composed:!0,detail:e.detail}))}collapse(){this.toggle(!1)}expand(){this.toggle(!0)}focus(index){if(this.childNodes&&index)this.childNodes.length<index&&(index=this.childNodes.length-1),-1==index&&(index=0),0!=this.childNodes.length&&this.childNodes[index].focus();else if(this.shadowRoot){let id=this.childNodes?"expand":"add";this.shadowRoot.getElementById(id).focus()}}toggle(open=!this.expanded){this.expanded=open,this._handleToggle()}_handleToggle(){this.dispatchEvent(new CustomEvent("toggle",{detail:this})),this.expanded?this.dispatchEvent(new CustomEvent("expand",{bubbles:!0,cancelable:!0,composed:!0,detail:this})):this.dispatchEvent(new CustomEvent("collapse",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}}_exports.SimpleFieldsArray=SimpleFieldsArray,window.customElements.define(SimpleFieldsArray.tag,SimpleFieldsArray)}));