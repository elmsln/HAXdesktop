define(["exports","../../../../lit-element/lit-element.js","../rich-text-editor-styles.js","../singletons/rich-text-editor-selection.js","./rich-text-editor-breadcrumb.js"],(function(_exports,_litElement,_richTextEditorStyles,_richTextEditorSelection,_richTextEditorBreadcrumb){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.RichTextEditorBreadcrumbs=void 0;
/**
   * Copyright 2018 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */
class RichTextEditorBreadcrumbs extends((0,_richTextEditorStyles.RichTextEditorStyles)(_litElement.LitElement)){static get tag(){return"rich-text-editor-breadcrumbs"}static get styles(){return[...super.styles,_litElement.css`
        :host {
          display: block;
          background-color: var(--rich-text-editor-bg);
          color: var(--rich-text-editor-button-color);
          border: var(--rich-text-editor-border);
          padding: 3px 10px;
        }
        :host([sticky]) {
          position: sticky;
          bottom: 0;
        }
        .selectednode {
          background-color: var(--rich-text-editor-bg);
        }
      `]}render(){return _litElement.html`
      ${this.label}
      ${this.selectionAncestors?(this.selectionAncestors||[]).map((ancestor,i)=>_litElement.html`
              <rich-text-editor-breadcrumb
                controls="${this.controls}"
                tag="${ancestor.nodeName.toLowerCase()}"
                .target="${ancestor}"
                @breadcrumb-tap="${this._handleBreadcrumb}"
              >
              </rich-text-editor-breadcrumb>
              ${i+1>=(this.selectionAncestors||[]).length?"":_litElement.html` <span class="divider"> &gt; </span> `}
            `):""}
    `}static get properties(){return{controls:{type:String},hidden:{type:Boolean,attribute:"hidden",reflect:!0},label:{type:String},sticky:{type:Boolean,reflect:!0},selectionAncestors:{type:Array}}}constructor(){super(),this.hidden=!0,this.sticky=!1,this.label="Expand selection: "}selectNode(node){this.dispatchEvent(new CustomEvent("selectnode",{bubbles:!0,composed:!0,cancelable:!0,detail:node}))}_handleBreadcrumb(e){console.log("_handleBreadcrumbs",e.detail.target),e.detail.target&&(this.selectNode(e.detail.target),console.log("_handleBreadcrumbs 2",e.detail.target,this.range))}}_exports.RichTextEditorBreadcrumbs=RichTextEditorBreadcrumbs,window.customElements.define(RichTextEditorBreadcrumbs.tag,RichTextEditorBreadcrumbs)}));