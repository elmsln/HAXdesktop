define(["exports","../lit-html.js"],(function(_exports,_litHtml){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.live=void 0;
/**
   * @license
   * Copyright (c) 2020 The Polymer Project Authors. All rights reserved.
   * This code may only be used under the BSD style license found at
   * http://polymer.github.io/LICENSE.txt
   * The complete set of authors may be found at
   * http://polymer.github.io/AUTHORS.txt
   * The complete set of contributors may be found at
   * http://polymer.github.io/CONTRIBUTORS.txt
   * Code distributed by Google as part of the polymer project is also
   * subject to an additional IP rights grant found at
   * http://polymer.github.io/PATENTS.txt
   */
const live=(0,_litHtml.directive)(value=>part=>{let previousValue;if(part instanceof _litHtml.EventPart||part instanceof _litHtml.NodePart)throw new Error("The `live` directive is not allowed on text or event bindings");if(part instanceof _litHtml.BooleanAttributePart)checkStrings(part.strings),previousValue=part.element.hasAttribute(part.name),part.value=previousValue;else{const{element:element,name:name,strings:strings}=part.committer;if(checkStrings(strings),part instanceof _litHtml.PropertyPart){if(previousValue=element[name],previousValue===value)return}else part instanceof _litHtml.AttributePart&&(previousValue=element.getAttribute(name));if(previousValue===String(value))return}part.setValue(value)});_exports.live=live;const checkStrings=strings=>{if(2!==strings.length||""!==strings[0]||""!==strings[1])throw new Error("`live` bindings can only contain a single expression")}}));