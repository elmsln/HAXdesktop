define(["exports","../../../lit-element/lit-element.js"],function(_exports,_litElement){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.HaxPicker=void 0;function _templateObject3_0985fee0812d11eb9c332bb120816628(){var data=babelHelpers.taggedTemplateLiteral(["\n            <hax-tray-button\n              dark-bg\n              id=\"picker-item-","\"\n              @click=\"","\"\n              data-selected=\"","\"\n              label=\"","\"\n              icon=\"","\"\n              ?color-meaning=\"","\"\n            >\n            </hax-tray-button>\n          "]);_templateObject3_0985fee0812d11eb9c332bb120816628=function _templateObject3_0985fee0812d11eb9c332bb120816628(){return data};return data}function _templateObject2_0985fee0812d11eb9c332bb120816628(){var data=babelHelpers.taggedTemplateLiteral(["\n      <div class=\"button-list\">\n        ","\n      </div>\n    "]);_templateObject2_0985fee0812d11eb9c332bb120816628=function _templateObject2_0985fee0812d11eb9c332bb120816628(){return data};return data}function _templateObject_0985fee0812d11eb9c332bb120816628(){var data=babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        .button-list {\n          display: block;\n          text-align: left;\n          overflow-x: hidden;\n          overflow-y: auto;\n          display: flex;\n          flex-wrap: wrap;\n          margin: 20px 0 0 0;\n          padding: 0;\n        }\n      "]);_templateObject_0985fee0812d11eb9c332bb120816628=function _templateObject_0985fee0812d11eb9c332bb120816628(){return data};return data}/**
 `hax-picker`
 A picker for selecting an item from a list of apps / hax gizmos which require
 a decision to be made. This is used when multiple things match either on upload
 in the add operation of the app or in the gizmo selection to render through,
 such as having multiple ways of presenting an image.

* @demo demo/index.html

@microcopy - the mental model for this element
 - data - this is the app data model for an element which expresses itself to hax
*/var HaxPicker=/*#__PURE__*/function(_LitElement){babelHelpers.inherits(HaxPicker,_LitElement);babelHelpers.createClass(HaxPicker,null,[{key:"styles",get:function get(){return[(0,_litElement.css)(_templateObject_0985fee0812d11eb9c332bb120816628())]}}]);function HaxPicker(){var _this;babelHelpers.classCallCheck(this,HaxPicker);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(HaxPicker).call(this));_this._elements=[];_this.selectionList=[];_this.pickerType="gizmo";return _this}babelHelpers.createClass(HaxPicker,[{key:"render",value:function render(){var _this2=this;return(0,_litElement.html)(_templateObject2_0985fee0812d11eb9c332bb120816628(),this.selectionList.map(function(element,index){return(0,_litElement.html)(_templateObject3_0985fee0812d11eb9c332bb120816628(),index,_this2._selected,index,element.title,element.icon,2===_this2.selectionList.length)}))}},{key:"buildOptions",/**
   * Present options to the user with a modal and selection method that
   * shifts itself to be above everything (stack order)
   * @param  [array] elements  a list of elements for presenting to the user
   * to select between.
   */value:function buildOptions(elements){var _this3=this,type=1<arguments.length&&arguments[1]!==void 0?arguments[1]:"element",title=2<arguments.length&&arguments[2]!==void 0?arguments[2]:"Select an option",pickerType=3<arguments.length&&arguments[3]!==void 0?arguments[3]:"gizmo";// wipe existing
this.pickerType=pickerType;var tmp=[];switch(pickerType){// hax gizmo selector
case"gizmo":for(var i in elements){elements[i].__type=type;tmp.push({icon:elements[i].gizmo.icon,title:elements[i].gizmo.title,color:elements[i].gizmo.color})}break;// app selector
case"app":for(var i in elements){tmp.push({icon:elements[i].details.icon,title:elements[i].details.title,color:elements[i].details.color})}break;// we don't know what to do with this
default:tmp=elements;break;}this._elements=elements;this.selectionList=babelHelpers.toConsumableArray(tmp);// try to focus on option 0
setTimeout(function(){_this3.shadowRoot.querySelector("#picker-item-0").focus()},50)}/**
   * Handle the user selecting an app.
   */},{key:"_selected",value:function _selected(e){var key=e.target.getAttribute("data-selected");e.preventDefault();e.stopPropagation();if(babelHelpers.typeof(this._elements[key])!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){// haxElement is a unique case
if("gizmo"==this.pickerType){this._elements[key].replace=!0;this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:this._elements[key]}))}else{// bubble this up
this.dispatchEvent(new CustomEvent("hax-app-picker-selection",{bubbles:!0,cancelable:!0,composed:!0,detail:this._elements[key]}))}}this.close()}},{key:"close",value:function close(){window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,cancelable:!0,detail:{}}))}}],[{key:"tag",get:function get(){return"hax-picker"}},{key:"properties",get:function get(){return{/**
       * raw element set
       */_elements:{type:Array},/**
       * Refactored list for selection purposes
       */selectionList:{type:Array},/**
       * Allow multiple uses
       */pickerType:{type:String,attribute:"picker-type"}}}}]);return HaxPicker}(_litElement.LitElement);_exports.HaxPicker=HaxPicker;window.customElements.define(HaxPicker.tag,HaxPicker)});