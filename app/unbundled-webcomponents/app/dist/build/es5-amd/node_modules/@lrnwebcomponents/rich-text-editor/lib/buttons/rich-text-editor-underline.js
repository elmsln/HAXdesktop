define(["exports","../../../../lit-element/lit-element.js","./rich-text-editor-prompt-button.js"],function(_exports,_litElement,_richTextEditorPromptButton){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.RichTextEditorUnderline=void 0;function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable});keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1,source;i<arguments.length;i++){source=null!=arguments[i]?arguments[i]:{};if(i%2){ownKeys(Object(source),!0).forEach(function(key){babelHelpers.defineProperty(target,key,source[key])})}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}}return target}/**
 * `rich-text-editor-underline`
 * a button for rich text editor (custom buttons can extend this)
 *
 * @element rich-text-editor-underline
 * @demo ./demo/buttons.html
 */var RichTextEditorUnderline=/*#__PURE__*/function(_RichTextEditorPrompt){babelHelpers.inherits(RichTextEditorUnderline,_RichTextEditorPrompt);babelHelpers.createClass(RichTextEditorUnderline,[{key:"render",// render function for template
value:function render(){return babelHelpers.get(babelHelpers.getPrototypeOf(RichTextEditorUnderline.prototype),"render",this).call(this)}// properties available to the custom element for data binding
}],[{key:"tag",/**
   * Store the tag name to make it easier to obtain directly.
   */get:function get(){return"rich-text-editor-underline"}},{key:"properties",get:function get(){return _objectSpread({},babelHelpers.get(babelHelpers.getPrototypeOf(RichTextEditorUnderline),"properties",this))}}]);function RichTextEditorUnderline(){var _this;babelHelpers.classCallCheck(this,RichTextEditorUnderline);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(RichTextEditorUnderline).call(this));_this.fields=[{property:"confirm",title:"Underline (not recommended)",description:"Underlines can be confused with links. Use italics instead.",inputMethod:"boolean"}];_this.tag="u";_this.icon="editor:format-underlined";_this.label="Underline (not recommended)";_this.toggles=!0;_this.command="underline";_this.shortcutKeys="ctrl+u";_this.value={confirm:!1};return _this}babelHelpers.createClass(RichTextEditorUnderline,[{key:"getValue",/**
   * updates prompt fields with selected range data
   */value:function getValue(){return{confirm:!!this.toggled}}},{key:"setToggled",value:function setToggled(){this.toggled=!!this.getPropValue("confirm")}},{key:"blockSelectors",get:function get(){return"u"}/**
   * determaines commandVal based on values passed from prompt
   */},{key:"promptCommandVal",get:function get(){this.commandVal=void 0}}]);return RichTextEditorUnderline}((0,_richTextEditorPromptButton.RichTextEditorPromptButtonBehaviors)(_litElement.LitElement));_exports.RichTextEditorUnderline=RichTextEditorUnderline;window.customElements.define(RichTextEditorUnderline.tag,RichTextEditorUnderline)});